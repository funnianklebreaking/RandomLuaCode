local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local Char = player.Character or player.CharacterAdded:Wait()
local Humanoid = Char:WaitForChild("Humanoid")

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("TextButton")
local SlideButton = Instance.new("TextButton")

-- check if _G.SlideCondition is a boolean value, otherwise use true as default
local SlideCondition = type(_G.SlideCondition) == "boolean" and _G.SlideCondition or true
-- check if _G.SlideSpeed is a number value, otherwise use 30 as default
local SlideSpeed = type(_G.SlideSpeed) == "number" and _G.SlideSpeed or 30
-- check if _G.SmoothRun is a boolean value, otherwise use false as default
local SmoothRun = type(_G.SmoothRun) == "boolean" and _G.SmoothRun or false

ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ResetOnSpawn = false

Frame.Name = "Frame"
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
Frame.BorderColor3 = Color3.new(0, 0, 0)
Frame.Position = UDim2.new(0.893773064, 0, 0.453002876, 0)
Frame.Size = UDim2.new(0, 58, 0, 20)
Frame.Font = Enum.Font.Code
Frame.Text = "Drag :3"
Frame.TextColor3 = Color3.new(1, 1, 1)
Frame.TextSize = 15
Frame.TextWrapped = true
Frame.Transparency = 0.5
Frame.Draggable = true

SlideButton.Name = "SlideButton"
SlideButton.Parent = Frame
SlideButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
SlideButton.BorderColor3 = Color3.new(0, 0, 0)
SlideButton.Position = UDim2.new(0.8, -46.8459, 1, 4)
SlideButton.Size = UDim2.new(0, 58, 0, 58)
SlideButton.Font = Enum.Font.Code
SlideButton.Text = "Slide"
SlideButton.TextColor3 = Color3.new(1, 1, 1)
SlideButton.TextSize = 15
SlideButton.TextWrapped = true
SlideButton.Transparency = 0.5
SlideButton.Active = true

local function slide()
    local slideAnimation = Instance.new("Animation")
    slideAnimation.AnimationId = "rbxassetid://282574440"
    local slideTrack = Humanoid:LoadAnimation(slideAnimation)
    local slideDirection = Char.HumanoidRootPart.CFrame.LookVector
    local slideVelocity = SlideSpeed * slideDirection
    local sliding = true
    SlideButton.Text = "Sliding"
    SlideButton.Active = false
    slideTrack:Play()
    Humanoid.WalkSpeed = 0
    Char.HumanoidRootPart.Velocity = slideVelocity
    local slideTween = TweenService:Create(Char.HumanoidRootPart, TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Velocity = Vector3.new(0, 0, 0)})
    slideTween:Play()
    slideTween.Completed:Connect(function()
        sliding = false
        slideTrack:Stop()
        Humanoid.WalkSpeed = 24
        SlideButton.Text = "Slide"
        SlideButton.Active = true
    end)
    while sliding do
        wait()
        local state = Humanoid:GetState()
        if state == Enum.HumanoidStateType.Jumping then
            sliding = false
            slideTween:Cancel()
            slideTrack:Stop()
            Humanoid.WalkSpeed = 24
            SlideButton.Text = "Slide"
            SlideButton.Active = true
        end
    end
end

SlideButton.MouseButton1Click:Connect(function()
slide()
end)

-- check the value of _G.SmoothRun before calling the function
if SmoothRun then
    local function HandleWalkSpeed(Char)
        local Humanoid = Char:WaitForChild("Humanoid")
        Humanoid.WalkSpeed = 0.1
        Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()		if Humanoid.MoveDirection == Vector3.new(0,0,0) then
                Humanoid.WalkSpeed = 0.1
                if Tween then
                    Tween:Cancel()
                end
                Tween = nil
            elseif not Tween then
                Tween = TweenService:Create(Humanoid,TweenInfo.new(0.6, Enum.EasingStyle.Linear, Enum.EasingDirection.In),{WalkSpeed = 24})
                Tween:Play()
            end
        end)
    end

    if Character then
        HandleWalkSpeed(Character)
    end
end
